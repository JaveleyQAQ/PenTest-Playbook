/**
	https://github.com/JaveleyQAQ/PenTest-Playbook/edit/main/burp/BambdaScripts/NormalRequestEvaluator.bambda
*/
String host = requestResponse.request().httpService().host();
String path = requestResponse.request().path();
String method = requestResponse.request().method();
String requestBody = requestResponse.request().bodyToString();

//ExclusionCriteria
MimeType mimeType = requestResponse.mimeType();
MimeType[] mimetypeExclude = {MimeType.IMAGE_TIFF,MimeType.IMAGE_BMP,MimeType.IMAGE_PNG,MimeType.IMAGE_GIF,
    MimeType.IMAGE_JPEG, MimeType.IMAGE_UNKNOWN,MimeType.FONT_WOFF2,MimeType.FONT_WOFF, MimeType.VIDEO, 
    MimeType.SOUND, MimeType.CSS,MimeType.APPLICATION_UNKNOWN, MimeType.UNRECOGNIZED
    };
String[] domainExclude = {    
    "google.com","youtube.com","facebook.com","twitter.com","instagram.com","linkedin.com", "pinterest.com","tumblr.com",
    "baidu.com",
};
String[] methodExclude = {
    "OPTIONS"
};
String[] pathExclude = {
    ".icon",
    ".css",
    ".svg",
    "/tingyun",
};
String[] requestBodyExclude = {
    // "这是一个测试"
};

//Set the default display to be in-scope.
boolean isInScope = !requestResponse.request().isInScope();


Pattern pathPattern = Pattern.compile(String.join("|", pathExclude));
Pattern bodyPattern = Pattern.compile(String.join("|", requestBodyExclude), Pattern.DOTALL | Pattern.CASE_INSENSITIVE);
Set<String> domainExcludeSet = new HashSet<>(Arrays.asList(domainExclude));
Set<String> methodExcludeSet = new HashSet<>(Arrays.asList(methodExclude));
Set<String> pathExcludeSet = new HashSet<>(Arrays.asList(pathExclude));
Set<String> requestBodyExcludeSet = new HashSet<>(Arrays.asList(requestBodyExclude));

// Check if the item is excluded from consideration
boolean isDomainExcluded = domainExcludeSet.stream().anyMatch(domain -> host.contains(domain));
boolean isMethodExcluded = methodExcludeSet.stream().anyMatch(method::contains);
boolean isPathExcluded = pathExcludeSet.stream().anyMatch(path::contains);
boolean isRequestBodyExcluded = requestBodyExcludeSet.stream().anyMatch(requestBody::contains);
boolean isMimeTypeExcluded = Arrays.stream(mimetypeExclude)
    .anyMatch(excludedMimeType -> excludedMimeType.equals(mimeType));

// Combine the logic of all exclusion criteria
boolean isExcluded = isDomainExcluded || isMethodExcluded || isPathExcluded || isRequestBodyExcluded || isMimeTypeExcluded || isInScope;
return !isExcluded; 